&НаКлиенте
Перем ЛокальныйКэш, НажатиеВыполнено;

#Область include_local_ПолучитьМодульОбъекта

&НаСервере
Функция МодульОбъектаСервер()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции

&НаСервереБезКонтекста
Функция МодульОбъектаСерверБезКонтекста()
	Возврат Новый (Тип("ВнешняяОбработкаОбъект.СБИС"));
КонецФункции

&НаКлиенте
Функция МодульОбъектаКлиент() Экспорт
	Возврат ВладелецФормы.Кэш.СБИС.МодульОбъектаКлиент;
КонецФункции

#КонецОбласти

#Область include_local_ФормаСменыАккаунта
#КонецОбласти

#Область include_core2_vo2_Формы_ФормаСменыАккаунта

&НаКлиенте
Функция Показать(Кэш, СписокДопОпераций) Экспорт
	НажатиеВыполнено = Ложь;
	ИнициализироватьФорму(Кэш, СписокДопОпераций);	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Возврат ЭтаФорма.ОткрытьМодально();
	#Иначе
		ЭтаФорма.Открыть();
	#КонецЕсли
КонецФункции

#Область include_core2_vo2_Формы_ФормаСменыАккаунта_Интерфейс_События

 &НаКлиенте
Процедура ВыходНажатие(Элемент)
	НажатиеВыполнено = Ложь;
	Закрыть(""); 
	ЛокальныйКэш.ГлавноеОкно.СбисВыйти();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ПараметрЗакрытия, ТекстПредупреждения="", СтандартнаяОбработка=Истина)
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		//Для толстого клиента второй параметр - признак выполнения стандартной обработки
		Если Не НажатиеВыполнено Тогда
			ПараметрЗакрытия = Ложь;
			ЭтаФорма.Закрыть("");
		КонецЕсли;
	#Иначе
		//Для тонкого клиента второй параметр - признак завершения работы программы
		Если ПараметрЗакрытия = Истина Тогда
			Возврат;
		ИначеЕсли Не НажатиеВыполнено Тогда
			СтандартнаяОбработка = Ложь;
			ЭтаФорма.Закрыть("");
		КонецЕсли;
	#КонецЕсли
КонецПроцедуры 	

&НаКлиенте
Процедура СписокОрганизацийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)  Экспорт

	ОбработкаВыбораАккаунта(Элемент.ТекущиеДанные.ИдАккаунта, ЛокальныйКэш);

КонецПроцедуры  

#КонецОбласти

#Область include_core2_vo2_Формы_ФормаСменыАккаунта_Интерфейс_ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаВыбораАккаунта(ИдАккаунта, Кэш) 
	
    Попытка
		Если Кэш.Парам.СпособХраненияМетокСтатусов = 0 Тогда
			МодульОбъектаКлиент().СохранитьМеткиСтатусов(Кэш);
		КонецЕсли;
        ИдСессии = ОбработчикПереключенияОрганизации(ИдАккаунта, Кэш);
		МодульОбъектаКлиент().ОчиститьЗначенияФич();
	Исключение 
		ИнфОбОшибке = ИнформацияОбОшибке();
		СбисИсключение = МодульОбъектаКлиент().НовыйСбисИсключение(ИнфОбОшибке, "ФормаСменыАккаунта.ОбработкаВыбораАккаунта");
		МодульОбъектаКлиент().СообщитьСбисИсключение(СбисИсключение);
		Возврат 
	КонецПопытки;	              
	МодульОбъектаКлиент().СбисДействияПриВыходеИзАккаунта(Кэш);
	НажатиеВыполнено = Истина;
	ПараметрыЗакрытияФормы = Новый Структура("ИдСессии, ИдАккаунта, АккаунтИзменился", ИдСессии, ИдАккаунта, Ложь);
	Если Не ТекущийАккаунт = ИдАккаунта Тогда
		ПараметрыЗакрытияФормы.АккаунтИзменился = Истина;
	КонецЕсли;
	ЭтаФорма.Закрыть(ПараметрыЗакрытияФормы);	  
	
КонецПроцедуры

// Обработка выбора организации   
&НаКлиенте
Функция ОбработчикПереключенияОрганизации(ИдАккаунта, Кэш)
	
	Если Кэш.СБИС.ПараметрыИнтеграции.Свойство("ИдАккаунта") И Кэш.СБИС.ПараметрыИнтеграции.ИдАккаунта = ИдАккаунта Тогда  
		Возврат "";
	КонецЕсли;
	Кэш.Парам.ИдентиФикаторСессии = МодульОбъектаКлиент().СбисПереключитьАккаунт(Кэш, Новый Структура("НомерАккаунта", ИдАккаунта), Новый Структура(), Ложь);
	Возврат Кэш.Парам.ИдентиФикаторСессии;
	
КонецФункции 	

&НаКлиенте
Процедура ИнициализироватьФорму(Кэш, СписокДопОпераций) 
	ЛокальныйКэш = Кэш;
	Попытка
		ТекущийАккаунт = ЛокальныйКэш.СБИС.ПараметрыИнтеграции.ИдАккаунта;
	Исключение
		ТекущийАккаунт = "";
	КонецПопытки;
	Попытка
		// Заполняем список аккаунтов 	
		СписокОрганизаций.Очистить();
        МассивАккаунтов = ЛокальныйКэш.СБИС.МодульОбъектаКлиент.СбисПолучитьСписокАккаунтов(ЛокальныйКэш, СписокДопОпераций, Ложь);
		Для каждого Аккаунт Из МассивАккаунтов Цикл
			НоваяСтрока = СписокОрганизаций.Добавить();
			НоваяСтрока.НазваниеАккаунта = Аккаунт.НазваниеАккаунта;
			НоваяСтрока.ИдАккаунта = Аккаунт.НомерАккаунта;	
		КонецЦикла;	
	Исключение
		Сообщить("Не удалось получить список аккаунтов. Обратитесь в тех. поддержку!");
	КонецПопытки;
КонецПроцедуры

#КонецОбласти

#КонецОбласти