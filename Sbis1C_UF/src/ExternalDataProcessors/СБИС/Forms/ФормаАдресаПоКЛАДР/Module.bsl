
#Область include_local_ПолучитьМодульОбъекта

&НаСервере
Функция МодульОбъектаСервер()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции

&НаСервереБезКонтекста
Функция МодульОбъектаСерверБезКонтекста()
	Возврат Новый (Тип("ВнешняяОбработкаОбъект.СБИС"));
КонецФункции

&НаКлиенте
Функция МодульОбъектаКлиент() Экспорт
	Возврат ВладелецФормы.Кэш.СБИС.МодульОбъектаКлиент;
КонецФункции

#КонецОбласти

#Область include_core2_vo2_Формы_ФормаАдресаПоКЛАДР

&НаКлиенте
Процедура Показать(ДополнительныеПараметры) Экспорт
	КэшСовместимостьМетодов = ДополнительныеПараметры.КэшСовместимостьМетодов;
	КэшПарам = ДополнительныеПараметры.КэшПарам;
	РезервныйДомен = ДополнительныеПараметры.РезервныйДомен;
	АдресСервера = ДополнительныеПараметры.АдресСервера;
	ЭтаФорма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("СбисОжиданиеОбновитьТаблицуАдресов",0.1,Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе()
// отмечает все записи в таблице
	ОтметитьВсе = Не ОтметитьВсе;
	Для Каждого Строка Из ТабАдрес Цикл
		Строка.Отмечен = ОтметитьВсе;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КнопкаВыполнитьНажатие(Кнопка)
// Бежим по отмеченным и там где возможно, меняем адреса на КЛАДРовские
	СтрокаОтмечена = Ложь;
	
	ОтмеченныеСтроки = ТабАдрес.НайтиСтроки(Новый Структура("Отмечен", Истина));
	Если ОтмеченныеСтроки.Количество()>0 Тогда
		СтрокаОтмечена = Истина;
	КонецЕсли;
		
	Если СтрокаОтмечена = Ложь и ТабАдрес.Количество()<>0 Тогда
		Текст = "Необходимо отметить хотя бы одну строку!";
		Предупреждение(Текст);
	ИначеЕсли СтрокаОтмечена = Истина  Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Текст = "ru = ""Исправить адреса контрагентов по формату КЛАДР?"";";
		Ответ = Вопрос(НСтр(Текст), Режим, 0);
		Если Ответ = КодВозвратаДиалога.ДА Тогда
			Попытка	
				СбисИзменитьАдресКонтрагента();
				СбисОбновитьТаблицуАдресов();
			Исключение
				Ошибка = ОписаниеОшибки();
				Сообщить(Ошибка);
			КонецПопытки;	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Заполняет структуру адреса и вызывает функцию, записывающую новый адрес в регистры или в табличную часть	
Процедура СбисИзменитьАдресКонтрагента()
	Для Каждого Стр из ТабАдрес Цикл                                              
		Если Стр.Отмечен=ложь Тогда
			Продолжить;
		КонецЕсли;
		Если Стр.АдресКЛАДРСписок.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		АдресКЛАДР = Стр.АдресКЛАДРСписок[0].Значение;
		Если Стр.ВозможноНесколькоВариантов Тогда
			Продолжить;
		КонецЕсли;	
				
		СтруктураАдреса = Новый Структура;
		СтруктураАдреса.Вставить("Индекс","");
		СтруктураАдреса.Вставить("Регион","");
		СтруктураАдреса.Вставить("КодРегион","");
		СтруктураАдреса.Вставить("Район","");
		СтруктураАдреса.Вставить("Город","");
		СтруктураАдреса.Вставить("НаселПункт","");
		СтруктураАдреса.Вставить("Улица","");
		СтруктураАдреса.Вставить("Дом","");
		СтруктураАдреса.Вставить("Корпус","");
		СтруктураАдреса.Вставить("Квартира","");
		СтруктураАдреса.Вставить("Представление","");
		СтруктураАдреса.Вставить("ТипКорпуса","");
		СтруктураАдреса.Вставить("ТипКвартиры","");
		СтруктураАдреса.Вставить("ТипДома","");
		
		СтрутураТиповДомКорпусКвартира = СбисВернутьТипДомаКорпусаКвартиры(АдресКЛАДР);
        СтруктураАдреса.ТипКорпуса  = СтрутураТиповДомКорпусКвартира.ТипКорпуса;
		СтруктураАдреса.ТипКвартиры = СтрутураТиповДомКорпусКвартира.ТипКвартиры;
		СтруктураАдреса.ТипДома     = СтрутураТиповДомКорпусКвартира.Типдома;
		СтруктураАдреса.Дом         = СтрутураТиповДомКорпусКвартира.Дом;
		СтруктураАдреса.Корпус      = СтрутураТиповДомКорпусКвартира.Корпус;
		СтруктураАдреса.Квартира    = СтрутураТиповДомКорпусКвартира.Квартира;
		
		СтруктураАдреса.Индекс = ?(АдресКЛАДР.idx<>NULL,АдресКЛАДР.idx,"");
		
		Если АдресКЛАДР.objs.Количество()<>0 Тогда
			Для Ид=0 по АдресКЛАДР.objs.Количество()-1 Цикл
				Если      стрДлина(АдресКЛАДР.objs[ид].code) = 2 Тогда
					СтруктураАдреса.Регион   = АдресКЛАДР.objs[ид].name+ " "+АдресКЛАДР.objs[ид].abbr;
					СтруктураАдреса.КодРегион   = АдресКЛАДР.objs[ид].code;
				ИначеЕсли стрДлина(АдресКЛАДР.objs[ид].code) = 5 Тогда
					СтруктураАдреса.Район    = АдресКЛАДР.objs[ид].name+ " "+АдресКЛАДР.objs[ид].abbr;
				ИначеЕсли стрДлина(АдресКЛАДР.objs[ид].code) = 8 Тогда
					СтруктураАдреса.Город    = АдресКЛАДР.objs[ид].name+ " "+АдресКЛАДР.objs[ид].abbr;
				ИначеЕсли стрДлина(АдресКЛАДР.objs[ид].code) = 11 Тогда
					СтруктураАдреса.НаселПункт = АдресКЛАДР.objs[ид].name+ " "+АдресКЛАДР.objs[ид].abbr;
				ИначеЕсли стрДлина(АдресКЛАДР.objs[ид].code) = 15 Тогда
					СтруктураАдреса.Улица    = АдресКЛАДР.objs[ид].name + " "+АдресКЛАДР.objs[ид].abbr;
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;
		сбисЗаписатьИзменения(Стр, СтруктураАдреса);
		Стр.Отмечен=ложь;
	КонецЦикла;
КонецПроцедуры	

// обновляет таблицу адресов	
Процедура СбисОбновитьТаблицуАдресов()
	ТабАдрес.Очистить();
			
	Выборка = Справочники.Контрагенты.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтруктураАдреса = Новый Структура;
		Ошибка = СбисВернутьТекстОшибкиПоАдресу(Выборка.Ссылка, СтруктураАдреса);
		Если Ошибка<>"" Тогда
			НоваяСтр = ТабАдрес.Добавить();
			новаяСтр.Контрагент = Выборка.Ссылка;
			новаяСтр.ТекАдрес = СбиСПолучитьПредставлениеАдрес(СтруктураАдреса);
			АдресКЛАДР =СбисСформироватьСтруктуруАдресаПоКЛАДР(новаяСтр.ТекАдрес);
			новаяСтр.АдресКЛАДРСписок.Добавить(АдресКЛАДР);
			новаяСтр.ВозможноНесколькоВариантов = СбисПроверитьКолВариантовАдреса(АдресКЛАДР);
			Если новаяСтр.ВозможноНесколькоВариантов Тогда
				НоваяСтр.АдресКЛАДР = "Возможно несколько вариантов адреса! Измените адрес вручную в карточке контрагента .";
			Иначе	
				НоваяСтр.АдресКладр = АдресКЛАДР.norm;
			КонецЕсли;
			новаяСтр.Ошибка = Ошибка;
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СбисОжиданиеОбновитьТаблицуАдресов()
// Обновляет таблицу адресов после открытия формы	
	Попытка
		СбисОбновитьТаблицуАдресов();
	Исключение
		Ошибка = ОписаниеОшибки();
		Сообщить(Ошибка);
	КонецПопытки;		
КонецПроцедуры	

// Проверяет возможность однозначно заполнить адрес по КЛАДР	
Функция СбисПроверитьКолВариантовАдреса(АдресКЛАДР)
	ЕстьРегион   = Ложь;
	ЕстьГород    = Ложь;
	ЕстьНасПункт = Ложь;
	ЕстьУлица    = Ложь;
	
	Для Ид=0 по АдресКЛАДР.objs.Количество()-1 Цикл
		Если СтрДлина(АдресКЛАДР.objs[ид].Code)=15 Тогда
			ЕстьУлица    = Истина;
		ИначеЕсли СтрДлина(АдресКЛАДР.objs[ид].code)=11 Тогда
			ЕстьНасПункт = Истина;
		ИначеЕсли СтрДлина(АдресКЛАДР.objs[ид].code)=8 Тогда
			ЕстьГород    = Истина;						
		ИначеЕсли СтрДлина(АдресКЛАДР.objs[ид].code)=2 Тогда
			ЕстьРегион   = Истина;	
		КонецЕсли;	
	КонецЦикла;
	
	
	Если (НЕ ЕстьНасПункт и НЕ ЕстьУлица) или (НЕ ЕстьГород и НЕ ЕстьНасПункт) или НЕ ЕстьРегион Тогда
		Возврат	Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;	
КонецФункции	

// формирует структуру с типами дома, корпуса, квартиры	
Функция СбисВернутьТипДомаКорпусаКвартиры(АдресКЛАДР)
	СтруктураТипов= Новый Структура();
		Если АдресКЛАДР.hs<>NULL и Найти(АдресКЛАДР.hs,"к")>0 и Найти(АдресКЛАДР.hs,"влд")=0 Тогда  // дом и корпус 12к2
			Корпус = Сред(АдресКЛАДР.hs,Найти(АдресКЛАДР.hs,"к")+1);
			Дом    = Сред(АдресКЛАДР.hs,1,СтрДлина(АдресКЛАДР.hs)-СтрДлина(Корпус)-1);
			
		    СтруктураТипов.Вставить("Дом",Дом);
			СтруктураТипов.Вставить("Корпус",Корпус);
			СтруктураТипов.Вставить("ТипКорпуса","корпус");
			СтруктураТипов.Вставить("ТипДома","дом");
		ИначеЕсли АдресКЛАДР.hs<>NULL и Найти(АдресКЛАДР.hs,"влд")>0 и Найти(АдресКЛАДР.hs,"стр")>0 тогда //владение и строение (влд12стр32)
			темпСтр    = Сред(АдресКЛАДР.hs,Найти(АдресКЛАДР.hs,"влд")+3); //отсекаем префикс "влд"  = 12стр32
					
			Корпус = Сред(ТемпСтр,Найти(темпСтр,"стр")+3);
			Дом    = Сред(ТемпСтр,1,СтрДлина(ТемпСтр)-Стрдлина(Корпус)-3);
			
			СтруктураТипов.Вставить("Дом",Дом);
			СтруктураТипов.Вставить("Корпус",Корпус);
			СтруктураТипов.Вставить("ТипКорпуса","строение");
			СтруктураТипов.Вставить("ТипДома","владение");
		ИначеЕсли АдресКЛАДР.hs<>NULL и Найти(АдресКЛАДР.hs,"влд")>0 и Найти(АдресКЛАДР.hs,"к")>0 тогда //владение и корпус (влд2к13)
			темпСтр    = Сред(АдресКЛАДР.hs,Найти(АдресКЛАДР.hs,"влд")+3); // 2к13
			
			Корпус = Сред(темпСтр,найти(темпСтр,"к")+1);
			Дом    = Сред(ТемпСтр,1,СтрДлина(ТемпСтр)-Стрдлина(Корпус)-1);
			
			СтруктураТипов.Вставить("Дом",Дом);
			СтруктураТипов.Вставить("Корпус",Корпус);
			СтруктураТипов.Вставить("ТипКорпуса","корпус");
			СтруктураТипов.Вставить("ТипДома","владение");
		ИначеЕсли АдресКЛАДР.hs<>NULL и Найти(АдресКЛАДР.hs,"стр")>0 и Найти(АдресКЛАДР.hs,"влд")=0 Тогда //дом и строение   (12стр3)
			Корпус = Сред(АдресКЛАДР.hs,Найти(АдресКЛАДР.hs,"стр")+3);
			Дом    = Сред(АдресКЛАДР.hs,1,СтрДлина(АдресКЛАДР.hs)-Стрдлина(Корпус)-3);
			
			СтруктураТипов.Вставить("Дом",Дом);
			СтруктураТипов.Вставить("Корпус",Корпус);
			СтруктураТипов.Вставить("ТипДома","дом");
			СтруктураТипов.Вставить("ТипКорпуса","строение");
		ИначеЕсли АдресКЛАДР.hs<>NULL и Найти(АдресКЛАДР.hs,"стр")=0 и Найти(АдресКЛАДР.hs,"влд")=0 и Найти(АдресКЛАДР.hs,"к")=0 Тогда //дом   12
			СтруктураТипов.Вставить("Дом",АдресКЛАДР.hs);
			СтруктураТипов.Вставить("Корпус","");
			СтруктураТипов.Вставить("ТипКорпуса","корпус");
			СтруктураТипов.Вставить("ТипДома","дом");
		Иначе
			СтруктураТипов.Вставить("Дом","");
			СтруктураТипов.Вставить("Корпус","");
			СтруктураТипов.Вставить("ТипКорпуса","корпус");
			СтруктураТипов.Вставить("ТипДома","дом");
		КонецЕсли;

		Если АдресКЛАДР.fl<>NULL и Найти(АдресКЛАДР.fl,"кв.")>0 тогда
			Квартира = Сред(АдресКЛАДР.fl,Найти(АдресКЛАДР.fl,"кв.")+3);
			СтруктураТипов.Вставить("ТипКвартиры","кв.");
			СтруктураТипов.Вставить("Квартира",Квартира);
		ИначеЕсли АдресКЛАДР.fl<>NULL и Найти(АдресКЛАДР.fl,"оф.")>0 тогда
			Квартира = Сред(АдресКЛАДР.fl,Найти(АдресКЛАДР.fl,"оф.")+3);
			СтруктураТипов.Вставить("ТипКвартиры","оф.");
			СтруктураТипов.Вставить("Квартира",Квартира);
		Иначе
			СтруктураТипов.Вставить("ТипКвартиры","кв.");
			СтруктураТипов.Вставить("Квартира","");
		КонецЕсли;
		
Возврат СтруктураТипов;
КонецФункции	
	
// Формирует тип ошибки по адресу контрагента	
Функция СбисВернутьТекстОшибкиПоАдресу(Контрагент, СтруктураАдреса)
	СтруктураАдреса.Вставить("Индекс","");
	СтруктураАдреса.Вставить("КодРегион","");
	СтруктураАдреса.Вставить("Регион","");
	СтруктураАдреса.Вставить("Район","");
	СтруктураАдреса.Вставить("Город","");
	СтруктураАдреса.Вставить("НаселПункт","");
	СтруктураАдреса.Вставить("Улица","");
	СтруктураАдреса.Вставить("Дом","");
	СтруктураАдреса.Вставить("Корпус","");
	СтруктураАдреса.Вставить("Квартира","");
	СтруктураАдреса.Вставить("КодСтраны","");
	СтруктураАдреса.Вставить("Представление","");
	
	сбисЗаполнитьСтруктуруАдреса(Контрагент, СтруктураАдреса);
	
	Если СтруктураАдреса.КодРегион = "" и СтруктураАдреса.Регион <> "" Тогда
		СтруктураАдреса.КодРегион = МодульОбъектаСервер().ПолучитьКодРегионаПоНазваниюНаСервере(СтруктураАдреса.Регион);
	КонецЕсли;
	
	Если СтруктураАдреса.Индекс="" и СтруктураАдреса.КодРегион="" и СтруктураАдреса.Район="" и СтруктураАдреса.Город="" 
		и СтруктураАдреса.НаселПункт="" и СтруктураАдреса.Улица="" и СтруктураАдреса.Дом="" и СтруктураАдреса.Корпус="" и СтруктураАдреса.Квартира="" Тогда
		Возврат "Адрес заполнен произвольной строкой.";
	ИначеЕсли СтруктураАдреса.Улица="" и СтруктураАдреса.НаселПункт="" Тогда
		Возврат "Не заполнено одно из полей: ""Улица"" или ""Населенный пункт"".";
	ИначеЕсли СтруктураАдреса.Город="" и СтруктураАдреса.НаселПункт="" и (Найти(Нрег(СтруктураАдреса.Регион),"москва")=0) и (Найти(Нрег(СтруктураАдреса.Регион),"байконур")=0) И (Найти(Нрег(СтруктураАдреса.Регион),"санкт-петербург")=0) Тогда
		Возврат "Не заполнено одно из полей: ""Город"" или ""Населенный пункт"".";	
	Иначе
		Попытка
			Возврат ?(СтруктураАдреса.КодРегион<>"","","Не заполнено поле ""Регион"".");
		Исключение	
			Возврат "Не заполнено поле ""Регион"".";
		КонецПопытки;	
	КонецЕсли;
	Возврат "";
КонецФункции	

// формирует текстовое представление адреса
Функция СбиСПолучитьПредставлениеАдрес(СтруктураАдреса)
	ТекПредставление = "";

	Если СокрЛП(СтруктураАдреса.Индекс) <> "" Тогда
		ТекПредставление = ТекПредставление + ", " + СокрЛП(СтруктураАдреса.Индекс);
	КонецЕсли;

	Если СокрЛП(СтруктураАдреса.Регион) <> "" Тогда
		ТекПредставление = ТекПредставление + ", " + СокрЛП(СтруктураАдреса.Регион);
	КонецЕсли;

	Если СокрЛП(СтруктураАдреса.Район) <> "" Тогда
		ТекПредставление = ТекПредставление + ", " + СокрЛП(СтруктураАдреса.Район);
	КонецЕсли;

	Если СокрЛП(СтруктураАдреса.Город) <> "" Тогда
		ТекПредставление = ТекПредставление + ", " + СокрЛП(СтруктураАдреса.Город);
	КонецЕсли;

	Если СокрЛП(СтруктураАдреса.НаселПункт) <> "" Тогда
		ТекПредставление = ТекПредставление + ", " + СокрЛП(СтруктураАдреса.НаселПункт);
	КонецЕсли;

	Если СокрЛП(СтруктураАдреса.Улица) <> "" Тогда
		ТекПредставление = ТекПредставление + ", " + СокрЛП(СтруктураАдреса.Улица);
	КонецЕсли;
	
	ТипДома = Неопределено;
	ТипКорпуса = Неопределено;
	ТипКвартиры = Неопределено;
	СтруктураАдреса.Свойство("ТипДома",     ТипДома);
	СтруктураАдреса.Свойство("ТипКорпуса",  ТипКорпуса);
	СтруктураАдреса.Свойство("ТипКвартиры", ТипКвартиры);

	
	Если СокрЛП(СтруктураАдреса.Дом) <> "" Тогда
		ТекПредставление = ТекПредставление + ", " + ?(ЗначениеЗаполнено(ТипДома), ТипДома, "дом") + " № " + СокрЛП(СтруктураАдреса.Дом);
	КонецЕсли;

	Если СокрЛП(СтруктураАдреса.Корпус) <> "" Тогда
		ТекПредставление = ТекПредставление + ", " + ?(ЗначениеЗаполнено(ТипКорпуса), ТипКорпуса, "корпус") + " " + СокрЛП(СтруктураАдреса.Корпус);
	КонецЕсли;

	Если СокрЛП(СтруктураАдреса.Квартира) <> "" Тогда
		ТекПредставление = ТекПредставление + ", " + ?(ЗначениеЗаполнено(ТипКвартиры), ТипКвартиры, "кв.") + СокрЛП(СтруктураАдреса.Квартира);
	КонецЕсли;

	Если СтрДлина(ТекПредставление) > 2 Тогда
		ТекПредставление = Сред(ТекПредставление, 3);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ТекПредставление) Тогда
		Возврат СтруктураАдреса.Представление;
	иначе	
		Возврат ТекПредставление;
	КонецЕсли;	

КонецФункции

//группа функций по работе с сервисом кладр
// Формирует структуру адреса, полученного с kladr.sbis.ru	
Функция СбисСформироватьСтруктуруАдресаПоКЛАДР(АдресСтрокой)
	ФайлСРезультатомКЛАДР = АдресПоКладрJSON(АдресСтрокой);
	Текст = Новый ЧтениеТекста(ФайлСРезультатомКЛАДР,КодировкаТекста.UTF8);
	СтрокаJSON = Текст.ПрочитатьСтроку();
	Текст.Закрыть();
	УдалитьФайлы(ФайлСРезультатомКЛАДР);
	МассивJSON = МодульОбъектаСервер().СбисПрочитатьJSON_НаСервере(СтрокаJSON);

	Возврат МассивJSON; 
КонецФункции	

// Получает адрес с kladr.sbis.ru, записывает во временный файл	
Функция АдресПоКладрJSON(Адрес)
	Результат = ПолучитьИмяВременногоФайла();
	Сервис="postal-service/service/code?addr="+Адрес;
	сбисСервер	= "online.sbis.ru";
	сбисПротокол= "https";
	Если РезервныйДомен Тогда
		сбисСервер = СтрЗаменить(сбисСервер, ".sbis.ru", ".saby.ru");
	КонецЕсли;
	сбисПрефикс	= СтрПолучитьСтроку(СтрЗаменить(Сред(АдресСервера, 9), "online", Символы.ПС), 1);
	Если Не Лев(сбисПрефикс, 2) = ".s" Тогда
		сбисСервер = сбисПрефикс + сбисСервер;
	КонецЕсли;
	сбисПрокси			= Новый ИнтернетПрокси;
	сбисПрокси.Пользователь	= КэшПарам.ПроксиЛогин;
	сбисПрокси.Пароль		= КэшПарам.ПроксиПароль;
	Если КэшПарам.ТипПрокси = "Вручную" Тогда
		Попытка
			сбисПорт = Число(КэшПарам.ПроксиПорт);
		Исключение
			Сообщить("Указан некорректный порт прокси-сервера");
			Возврат Ложь;
		КонецПопытки;
		Попытка
			сбисПрокси.Установить(сбисПротокол,КэшПарам.ПроксиСервер,сбисПорт,КэшПарам.ПроксиЛогин,КэшПарам.ПроксиПароль);
		Исключение
			сбисПрокси.Установить(сбисПротокол,КэшПарам.ПроксиСервер,сбисПорт);
		КонецПопытки;
	КонецЕсли;
	Если КэшСовместимостьМетодов.HTTPСоединение.OpenSSL Тогда
		СтрокаСоединения = "Новый HTTPСоединение(сбисСервер,,,,сбисПрокси,,Новый ЗащищенноеСоединениеOpenSSL())";
	Иначе
		СтрокаСоединения = "Новый HTTPСоединение(сбисСервер,,,,сбисПрокси,Истина)";
	КонецЕсли;
	сбисСоединение = Вычислить(СтрокаСоединения);
	сбисСоединение.Получить(Сервис, Результат); 
	сбисСоединение = Неопределено;
	Возврат Результат;
КонецФункции
 
#КонецОбласти

#Область include_local_Формы_ФормаАдресаПоКЛАДР

//////////////////////////////////////////////////////////////////////////////////

////////////////////// Управляемое приложение/////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
Функция ЗаполнитьСтруктуруФайла(СтрокаXML) Экспорт
	СтруктураФайла = Новый Структура;
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(СтрокаXML);
	ПостроительDOM = Новый ПостроительDOM; 
	Попытка
		ДокументДОМ = ПостроительDOM.Прочитать(ЧтениеXML);
		ПрочитатьУзелDOM(ДокументДОМ.ПервыйДочерний, СтруктураФайла);
	Исключение
	КонецПопытки;
	Возврат СтруктураФайла;
КонецФункции
Функция ПрочитатьУзелDOM(УзелDOM, Узел) 
	
	Уз = УзелDOM;
	Пока Уз<>Неопределено Цикл
		Если ТипЗнч(Уз) = Тип("ТекстDOM") Тогда
			//Узел.Вставить("Значение", Уз.ПолныйТекст);
			Если Узел.Количество() = 0 Тогда
				Узел = Уз.ПолныйТекст;
			Иначе
				Узел.Вставить("Параметр", Уз.ПолныйТекст);
			КонецЕсли;	
			Возврат Узел;
		Иначе	
			Если Уз.Атрибуты.Количество() <> 0 или Уз.ПервыйДочерний <> Неопределено Тогда
				НоваяСтруктура = Новый Структура;
				Атрибуты = Уз.Атрибуты;
				Для каждого Атрибут из Атрибуты Цикл
					Попытка
						НоваяСтруктура.Вставить(Атрибут.ИмяУзла, Атрибут.ЗначениеУзла);
					Исключение
					КонецПопытки;
				КонецЦикла;	
				Если Уз.ИмяУзла = "СтрТабл" Тогда
					Если Узел.Свойство("СтрТабл") = Ложь Тогда
						МассивСтрок = Новый Массив;
					Иначе
						МассивСтрок = Узел.СтрТабл;
					КонецЕсли;	
					МассивСтрок.Добавить(НоваяСтруктура);
					Узел.Вставить(Уз.ИмяУзла, МассивСтрок);
				ИначеЕсли Уз.ИмяУзла = "ДопАдрЭл" Тогда
					Если Узел.Свойство("ДопАдрЭл") = Ложь Тогда
						МассивСтрок = Новый Массив;
					Иначе
						МассивСтрок = Узел.ДопАдрЭл;
					КонецЕсли;	
					МассивСтрок.Добавить(НоваяСтруктура);
					Узел.Вставить(Уз.ИмяУзла, МассивСтрок);
				Иначе	
					Узел.Вставить(Уз.ИмяУзла, НоваяСтруктура);
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
		Если Уз.ПервыйДочерний <> Неопределено Тогда
			Уз = УЗ.ПервыйДочерний;
			ДочУзел = Новый Структура;
			сбисСкопироватьСтруктуру(ДочУзел, Узел[УЗ.РодительскийУзел.ИмяУзла]);
			ПрочитатьУзелDOM(Уз, ДочУзел);
			Если УЗ.РодительскийУзел.ИмяУзла = "СтрТабл" Тогда
				сбисСкопироватьСтруктуру(Узел.СтрТабл[Узел.СтрТабл.Количество()-1], ДочУзел);
			ИначеЕсли УЗ.РодительскийУзел.ИмяУзла = "ДопАдрЭл" Тогда
				сбисСкопироватьСтруктуру(Узел.ДопАдрЭл[Узел.ДопАдрЭл.Количество()-1], ДочУзел);
			Иначе	
				Узел.Вставить(УЗ.РодительскийУзел.ИмяУзла, ДочУзел);
			КонецЕсли;	
			Уз = Уз.РодительскийУзел;
		КонецЕсли;
		Уз = Уз.СледующийСоседний;
	КонецЦикла;
	
	Возврат Узел;
	
КонецФункции		
Процедура сбисСкопироватьСтруктуру(СтруктураКуда, знач СтруктураОткуда)  Экспорт
	Для Каждого Элемент Из СтруктураОткуда Цикл	
		Если ТипЗнч(СтруктураОткуда) = Тип("Массив") Тогда
			
		ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("Структура") Тогда
			//Если Не СтруктураКуда.Свойство(Элемент.Ключ) или СтруктураКуда[Элемент.Ключ] = Неопределено или ТипЗнч(СтруктураКуда[Элемент.Ключ])<>Тип("Структура") Тогда
			СтруктураКуда.Вставить(Элемент.Ключ, Новый Структура);
			//КонецЕсли;
			сбисСкопироватьСтруктуру(СтруктураКуда[Элемент.Ключ], Элемент.Значение);				
		ИначеЕсли Не СтруктураКуда.Свойство(Элемент.Ключ) Тогда
			СтруктураКуда.Вставить(Элемент.Ключ,Элемент.Значение);
		Иначе
			СтруктураКуда[Элемент.Ключ] = Элемент.Значение;			
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры
Процедура сбисЗаписатьИзменения(Стр, СтруктураАдреса)
	Контрагент = Стр.Контрагент.ПолучитьОбъект();
	
	Отбор = Новый Структура;
	Отбор.Вставить("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
	Отбор.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	АдресЗапись = Контрагент.КонтактнаяИнформация.НайтиСтроки(Отбор);
	Если АдресЗапись.Количество() = 0 Тогда
		АдресЗапись = Контрагент.КонтактнаяИнформация.Добавить();
		АдресЗапись.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
		АдресЗапись.Вид = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
	Иначе
		АдресЗапись = АдресЗапись[0];
	КонецЕсли;
	ЗначенияПолей = "";
	ЗначенияПолей = ЗначенияПолей+"Индекс="+СтруктураАдреса.Индекс+Символы.ПС;
	ЗначенияПолей = ЗначенияПолей+"КодРегиона="+СтруктураАдреса.КодРегион+Символы.ПС;
	ЗначенияПолей = ЗначенияПолей+"Район="+СтруктураАдреса.Район+Символы.ПС;
	ЗначенияПолей = ЗначенияПолей+"Город="+СтруктураАдреса.Город+Символы.ПС;
	ЗначенияПолей = ЗначенияПолей+"НаселенныйПункт="+СтруктураАдреса.НаселПункт+Символы.ПС;
	ЗначенияПолей = ЗначенияПолей+"Улица="+СтруктураАдреса.Улица+Символы.ПС;
	ЗначенияПолей = ЗначенияПолей+"Дом="+СтруктураАдреса.Дом+Символы.ПС;
	ЗначенияПолей = ЗначенияПолей+"Корпус="+СтруктураАдреса.Корпус+Символы.ПС;
	ЗначенияПолей = ЗначенияПолей+"Квартира="+СтруктураАдреса.Квартира+Символы.ПС;
	ЗначенияПолей = ЗначенияПолей+"ТипДома="+СтруктураАдреса.ТипДома+Символы.ПС;
	ЗначенияПолей = ЗначенияПолей+"ТипКорпуса="+СтруктураАдреса.ТипКорпуса+Символы.ПС;
	ЗначенияПолей = ЗначенияПолей+"ТипКвартиры="+СтруктураАдреса.ТипКвартиры;
	
	АдресЗапись.ЗначенияПолей = ЗначенияПолей;
	АдресЗапись.Представление = СбиСПолучитьПредставлениеАдрес(СтруктураАдреса);
	Контрагент.Записать();
КонецПроцедуры
Процедура сбисЗаполнитьСтруктуруАдреса(Контрагент, СтруктураАдреса)
	Отбор = Новый Структура;
	Отбор.Вставить("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
	Отбор.Вставить("Вид", Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	АдресЗапись = Контрагент.КонтактнаяИнформация.НайтиСтроки(Отбор);
	Если АдресЗапись.Количество() = 0 Тогда
		Возврат;
	Иначе
		АдресЗапись = АдресЗапись[0];
	КонецЕсли;
	АдресРег = АдресЗапись.ЗначенияПолей;
	СтруктураАдреса.Представление=АдресЗапись.Представление;	
	сч = 1;
	Если Лев(АдресРег,21) = "<КонтактнаяИнформация" Тогда
		АдресСтруктураXML = ЗаполнитьСтруктуруФайла(АдресЗапись.ЗначенияПолей);
		Попытка
			Если АдресСтруктураXML.Свойство("КонтактнаяИнформация") и АдресСтруктураXML.КонтактнаяИнформация.Свойство("Состав") и АдресСтруктураXML.КонтактнаяИнформация.Состав.Свойство("Состав") Тогда
				Если АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.Свойство("ДопАдрЭл") Тогда
					Для Каждого АдрЭл Из АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.ДопАдрЭл Цикл
						Если АдрЭл.Свойство("ТипАдрЭл") и АдрЭл.ТипАдрЭл = "10100000" и АдрЭл.Свойство("Значение") Тогда
							СтруктураАдреса.Индекс = АдрЭл.Значение;
						ИначеЕсли АдрЭл.Свойство("Номер") и АдрЭл.Номер.Свойство("Тип") и АдрЭл.Номер.Свойство("Значение") Тогда
							Если АдрЭл.Номер.Тип = "1010" или АдрЭл.Номер.Тип = "1020" или АдрЭл.Номер.Тип = "1030" Тогда
								СтруктураАдреса.Дом = АдрЭл.Номер.Значение;
							ИначеЕсли АдрЭл.Номер.Тип = "1040" или АдрЭл.Номер.Тип = "1050" или АдрЭл.Номер.Тип = "1060" или АдрЭл.Номер.Тип = "1070" или АдрЭл.Номер.Тип = "1080" Тогда
								СтруктураАдреса.Корпус = АдрЭл.Номер.Значение;
							ИначеЕсли АдрЭл.Номер.Тип = "2010" или АдрЭл.Номер.Тип = "2020" или АдрЭл.Номер.Тип = "2030" или АдрЭл.Номер.Тип = "2040" или АдрЭл.Номер.Тип = "2050" Тогда
								СтруктураАдреса.Квартира = АдрЭл.Номер.Значение;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				Если АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.Свойство("Город") Тогда
					Если ТипЗнч(АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.Город) = Тип("Структура") и АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.Город.Свойство("Параметр") Тогда
						СтруктураАдреса.Город = АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.Город.Параметр;
					ИначеЕсли ТипЗнч(АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.Город) = Тип("Строка") Тогда
						СтруктураАдреса.Город = АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.Город;
					КонецЕсли;
				КонецЕсли;
				Если АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.Свойство("СубъектРФ") Тогда
					Если ТипЗнч(АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.СубъектРФ) = Тип("Структура") и АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.СубъектРФ.Свойство("Параметр") Тогда
						СтруктураАдреса.Регион = АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.СубъектРФ.Параметр;
					ИначеЕсли ТипЗнч(АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.СубъектРФ) = Тип("Строка") Тогда
						СтруктураАдреса.Регион = АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.СубъектРФ;
					КонецЕсли;
				КонецЕсли;
				Если АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.Свойство("НаселПункт") Тогда
					Если ТипЗнч(АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.НаселПункт) = Тип("Структура") и АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.НаселПункт.Свойство("Параметр") Тогда
						СтруктураАдреса.НаселПункт = АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.НаселПункт.Параметр;
					ИначеЕсли ТипЗнч(АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.НаселПункт) = Тип("Строка") Тогда
						СтруктураАдреса.НаселПункт = АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.НаселПункт;
					КонецЕсли;
				КонецЕсли;
				Если АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.Свойство("Улица") Тогда
					Если ТипЗнч(АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.Улица) = Тип("Структура") и АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.Улица.Свойство("Параметр") Тогда
						СтруктураАдреса.Улица = АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.Улица.Параметр;
					ИначеЕсли ТипЗнч(АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.Улица) = Тип("Строка") Тогда
						СтруктураАдреса.Улица = АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.Улица;
					КонецЕсли;
				КонецЕсли;
				Если АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.Свойство("СвРайМО") и АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.СвРайМО.Свойство("Район") Тогда
					Если ТипЗнч(АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.СвРайМО.Район) = Тип("Структура") и АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.СвРайМО.Район.Свойство("Параметр") Тогда
						СтруктураАдреса.Район = АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.СвРайМО.Район.Параметр;
					ИначеЕсли ТипЗнч(АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.СвРайМО.Район) = Тип("Строка") Тогда
						СтруктураАдреса.Район = АдресСтруктураXML.КонтактнаяИнформация.Состав.Состав.СвРайМО.Район;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		Исключение
		КонецПопытки;                            
		
	Иначе
		Пока сч<=СтрЧислоСтрок(АдресРег) Цикл
			ЭлементАдреса = СтрПолучитьСтроку(АдресРег, сч);
			сч = сч+1;
			Если Найти(нрег(ЭлементАдреса), "индекс=") Тогда
				СтруктураАдреса.Индекс = Сред(ЭлементАдреса, 8);
			ИначеЕсли Найти(нрег(ЭлементАдреса), "кодрегиона=") Тогда
				СтруктураАдреса.КодРегион = Сред(ЭлементАдреса, 12);
			ИначеЕсли Найти(нрег(ЭлементАдреса), "регион=") Тогда
				СтруктураАдреса.Регион = Сред(ЭлементАдреса, 8);
			ИначеЕсли Найти(нрег(ЭлементАдреса), "район=") Тогда
				СтруктураАдреса.Район = Сред(ЭлементАдреса, 7);
			ИначеЕсли Найти(нрег(ЭлементАдреса), "город=") Тогда
				СтруктураАдреса.Город = Сред(ЭлементАдреса, 7);
			ИначеЕсли Найти(нрег(ЭлементАдреса), "населенныйпункт=") Тогда
				СтруктураАдреса.НаселПункт = Сред(ЭлементАдреса, 17);
			ИначеЕсли Найти(нрег(ЭлементАдреса), "улица=") Тогда
				СтруктураАдреса.Улица = Сред(ЭлементАдреса, 7);
			ИначеЕсли Найти(нрег(ЭлементАдреса), "дом=") Тогда
				СтруктураАдреса.Дом = Сред(ЭлементАдреса, 5);
			ИначеЕсли Найти(нрег(ЭлементАдреса), "корпус=") Тогда
				СтруктураАдреса.Корпус = Сред(ЭлементАдреса, 8);
			ИначеЕсли Найти(нрег(ЭлементАдреса), "квартира=") Тогда
				СтруктураАдреса.Квартира = Сред(ЭлементАдреса, 10);
			ИначеЕсли Найти(нрег(ЭлементАдреса), "кодстраны=") Тогда
				СтруктураАдреса.КодСтраны = Сред(ЭлементАдреса, 11);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
